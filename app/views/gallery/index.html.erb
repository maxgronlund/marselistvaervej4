<div class ="mstv grid-container">
	<div class="thumb-box">
		<div class="borders">
			<div id="thumbs" class="navigation">
				
				<%#=raw @facility.body_dk %>
				
				<ul class="thumbs noscript">
					<% Photo.all.each do |photo| %>
						<li>
							<a class="thumb" name="<%= photo.title%>" href="<%= photo.image.url(:fullSize) %>" title="<%= photo.title%>">
								<img src="<%= photo.image.url(:mini) %>" alt="<%= photo.title%>" />
							</a>
							<div class="caption">
								<div class="text_right">
									<a href="<%= photo.image.url(:fullSize) %>">Download billed</a>
								</div>
								<h3><%= photo.title%></h3>
								<%= photo.body%>
							</div>	
						</li>
					<% end %>
				</ul>
			</div>
		</div>
		<% if can_edit? %>
			<div class="edit">
				<%= link_to 'rediger photos', photos_path %>
			</div>
		<%end%>
	</div>
	
	<div class="gallery-box">
		<!-- Start Advanced Gallery Html Containers -->
		<div id="gallery" class="gallery_content">
				
			<div class="slideshow-container">
				<div id="loading" class="loader"></div>
				<div id="slideshow" class="slideshow"></div>
			</div>
			<div id="controls" class="controls"></div>
			<div id="caption" class="caption-container"></div>
		</div>
	</div>
</div>
<div style="clear: both;"></div>



<script type="text/javascript">
	jQuery(document).ready(function($) {
		// We only want these styles applied when javascript is enabled
		$('div.navigation').css({'width' : '364px', 'float' : 'left'});
		$('div.gallery_content').css('display', 'block');

		// Initially set opacity on thumbs and add
		// additional styling for hover effect on thumbs
		var onMouseOutOpacity = 0.67;
		$('#thumbs ul.thumbs li').opacityrollover({
			mouseOutOpacity:   onMouseOutOpacity,
			mouseOverOpacity:  1.0,
			fadeSpeed:         'fast',
			exemptionSelector: '.selected'
		});
		
		// Initialize Advanced Galleriffic Gallery
		var gallery = $('#thumbs').galleriffic({
			delay:                     2500,
			numThumbs:                 15,
			preloadAhead:              10,
			enableTopPager:            true,
			enableBottomPager:         true,
			maxPagesToShow:            7,
			imageContainerSel:         '#slideshow',
			controlsContainerSel:      '#controls',
			captionContainerSel:       '#caption',
			loadingContainerSel:       '#loading',
			renderSSControls:          true,
			renderNavControls:         true,
			playLinkText:              'Start Slideshow',
			pauseLinkText:             'Pause Slideshow',
			prevLinkText:              '&lsaquo; Forrige Photo  ',
			nextLinkText:              '  NÃ¦ste Photo &rsaquo;',
			nextPageLinkText:          'Next &rsaquo;',
			prevPageLinkText:          '&lsaquo; Prev',
			enableHistory:             true,
			autoStart:                 true,
			syncTransitions:           true,
			defaultTransitionDuration: 900,
			onSlideChange:             function(prevIndex, nextIndex) {
				// 'this' refers to the gallery, which is an extension of $('#thumbs')
				this.find('ul.thumbs').children()
					.eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
					.eq(nextIndex).fadeTo('fast', 1.0);
			},
			onPageTransitionOut:       function(callback) {
				this.fadeTo('fast', 0.0, callback);
			},
			onPageTransitionIn:        function() {
				this.fadeTo('fast', 1.0);
			}
		});

		/**** Functions to support integration of galleriffic with the jquery.history plugin ****/

		// PageLoad function
		// This function is called when:
		// 1. after calling $.historyInit();
		// 2. after calling $.historyLoad();
		// 3. after pushing "Go Back" button of a browser
		function pageload(hash) {
			// alert("pageload: " + hash);
			// hash doesn't contain the first # character.
			if(hash) {
				$.galleriffic.gotoImage(hash);
			} else {
				gallery.gotoIndex(0);
			}
		}

		// Initialize history plugin.
		// The callback is called at once by present location.hash. 
		$.historyInit(pageload, "advanced.html");

		// set onlick event for buttons using the jQuery 1.3 live method
		$("a[rel='history']").live('click', function(e) {
			if (e.button != 0) return true;
			
			var hash = this.href;
			hash = hash.replace(/^.*#/, '');

			// moves to a new page. 
			// pageload is called at once. 
			// hash don't contain "#", "?"
			$.historyLoad(hash);

			return false;
		});

		/****************************************************************************************/
	});
</script>